//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.12.28 at 10:31:24 AM CST 
//


package com.pplive.bip.scheduler.oozie.workflow2;

import javax.xml.bind.annotation.*;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for WORKFLOW-APP complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="WORKFLOW-APP">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="start" type="{uri:oozie:workflow:0.1}START"/>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element name="decision" type="{uri:oozie:workflow:0.1}DECISION"/>
 *           &lt;element name="fork" type="{uri:oozie:workflow:0.1}FORK"/>
 *           &lt;element name="join" type="{uri:oozie:workflow:0.1}JOIN"/>
 *           &lt;element name="kill" type="{uri:oozie:workflow:0.1}KILL"/>
 *           &lt;element name="action" type="{uri:oozie:workflow:0.1}ACTION"/>
 *         &lt;/choice>
 *         &lt;element name="end" type="{uri:oozie:workflow:0.1}END"/>
 *       &lt;/sequence>
 *       &lt;attribute name="name" use="required" type="{uri:oozie:workflow:0.1}IDENTIFIER" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "WORKFLOW-APP", propOrder = {
    "start",
    "decisionOrForkOrJoin",
    "end"
})
@XmlRootElement(name="workflow-app", namespace="uri:oozie:workflow:0.1")
public class Workflow {

    @XmlElement(required = true)
    protected StartNode start;
    @XmlElements({
        @XmlElement(name = "decision", type = DecisionNode.class),
        @XmlElement(name = "fork", type = ForkNode.class),
        @XmlElement(name = "join", type = JoinNode.class),
        @XmlElement(name = "kill", type = KillNode.class),
        @XmlElement(name = "action", type = Action.class)
    })
    protected List<Object> decisionOrForkOrJoin;
    @XmlElement(required = true)
    protected EndNode end;
    @XmlAttribute(name = "name", required = true)
    protected String name;
    
    public final static String END_NODE = "end";
    public final static String KILL_NODE = "kill";
    
    public Workflow() {
    	
    }
    /**
     * shortcut constructor
     * @param name
     */
    public Workflow(String name) {
    	this.setName(name);
		this.setEndName(END_NODE);
		this.setKill(KILL_NODE, "[${wf:errorMessage(wf:lastErrorNode())}]");
    }
    
    /**
     * Gets the value of the start property.
     * 
     * @return
     *     possible object is
     *     {@link StartNode }
     *     
     */
    public StartNode getStart() {
        return start;
    }

    /**
     * Sets the value of the start property.
     * 
     * @param value
     *     allowed object is
     *     {@link StartNode }
     *     
     */
    public void setStart(StartNode value) {
        this.start = value;
    }
    
    /**
     * shortcut for set start-to
     */
    public void setStartTo(String id) {
    	StartNode start = new StartNode();
		start.setTo(id);
		this.setStart(start);
    }
    
    /**
     * Gets the value of the decisionOrForkOrJoin property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the decisionOrForkOrJoin property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDecisionOrForkOrJoin().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DecisionNode }
     * {@link ForkNode }
     * {@link JoinNode }
     * {@link KillNode }
     * {@link Action }
     * 
     * 
     */
    public List<Object> getDecisionOrForkOrJoin() {
        if (decisionOrForkOrJoin == null) {
            decisionOrForkOrJoin = new ArrayList<Object>();
        }
        return this.decisionOrForkOrJoin;
    }
    
    /**
     * add action
     */
    public void add(Object o) {
    	this.getDecisionOrForkOrJoin().add(o);
    }
    
    /**
     * Gets the value of the end property.
     * 
     * @return
     *     possible object is
     *     {@link EndNode }
     *     
     */
    public EndNode getEnd() {
        return end;
    }

    /**
     * Sets the value of the end property.
     * 
     * @param value
     *     allowed object is
     *     {@link EndNode }
     *     
     */
    public void setEnd(EndNode value) {
        this.end = value;
    }

    /**
     * shortcut for set end
     */
    public void setEndName(String name) {
    	EndNode end = new EndNode();
    	end.setName(name);
		this.setEnd(end);
    }
    
    /**
     * shorcut for setup kill
     */
    public void setKill(String name, String msg) {
    	KillNode kill = new KillNode();
		kill.setName(name);
		kill.setMessage(msg);
		this.add(kill);
    }
    
    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

}
