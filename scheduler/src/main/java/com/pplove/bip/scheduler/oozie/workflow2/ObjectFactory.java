//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.12.28 at 10:31:24 AM CST 
//


package com.pplove.bip.scheduler.oozie.workflow2;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.pplove.bip.common.schedule.workflow package.
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _WorkflowApp_QNAME = new QName("uri:oozie:workflow:0.1", "workflow-app");
    private final static QName _MapReduce_QNAME = new QName("uri:oozie:workflow:0.1", "map-reduce");
    private final static QName _Ssh_QNAME = new QName("uri:oozie:workflow:0.1", "ssh");
    private final static QName _Pig_QNAME = new QName("uri:oozie:workflow:0.1", "pig");
    private final static QName _SubWorkflow_QNAME = new QName("uri:oozie:workflow:0.1", "sub-workflow");
    private final static QName _Fs_QNAME = new QName("uri:oozie:workflow:0.1", "fs");
    private final static QName _Kill_QNAME = new QName("uri:oozie:workflow:0.1", "kill");
    private final static QName _Switch_QNAME = new QName("uri:oozie:workflow:0.1", "switch");
    private final static QName _Java_QNAME = new QName("uri:oozie:workflow:0.1", "java");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.pplove.bip.common.schedule.workflow
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ConfigurationNode }
     * 
     */
    public ConfigurationNode createCONFIGURATION() {
        return new ConfigurationNode();
    }

    /**
     * Create an instance of {@link Workflow }
     * 
     */
    public Workflow createWORKFLOWAPP() {
        return new Workflow();
    }

    /**
     * Create an instance of {@link FSNode }
     * 
     */
    public FSNode createFS() {
        return new FSNode();
    }

    /**
     * Create an instance of {@link SubWorkflow }
     * 
     */
    public SubWorkflow createSUBWORKFLOW() {
        return new SubWorkflow();
    }

    /**
     * Create an instance of {@link KillNode }
     * 
     */
    public KillNode createKILL() {
        return new KillNode();
    }

    /**
     * Create an instance of {@link JavaNode }
     * 
     */
    public JavaNode createJAVA() {
        return new JavaNode();
    }

    /**
     * Create an instance of {@link SwitchNode }
     * 
     */
    public SwitchNode createSWITCH() {
        return new SwitchNode();
    }

    /**
     * Create an instance of {@link SSHNode }
     * 
     */
    public SSHNode createSSH() {
        return new SSHNode();
    }

    /**
     * Create an instance of {@link MapReduceNode }
     * 
     */
    public MapReduceNode createMAPREDUCE() {
        return new MapReduceNode();
    }

    /**
     * Create an instance of {@link PigNode }
     * 
     */
    public PigNode createPIG() {
        return new PigNode();
    }

    /**
     * Create an instance of {@link StreamingNode }
     * 
     */
    public StreamingNode createSTREAMING() {
        return new StreamingNode();
    }

    /**
     * Create an instance of {@link PrepareNode }
     * 
     */
    public PrepareNode createPREPARE() {
        return new PrepareNode();
    }

    /**
     * Create an instance of {@link HTTPNode }
     * 
     */
    public HTTPNode createHTTP() {
        return new HTTPNode();
    }

    /**
     * Create an instance of {@link HTTPPost }
     * 
     */
    public HTTPPost createHTTPPOST() {
        return new HTTPPost();
    }

    /**
     * Create an instance of {@link DefaultElement }
     * 
     */
    public DefaultElement createDEFAULT() {
        return new DefaultElement();
    }

    /**
     * Create an instance of {@link CaseElement }
     * 
     */
    public CaseElement createCASE() {
        return new CaseElement();
    }

    /**
     * Create an instance of {@link PipesNode }
     * 
     */
    public PipesNode createPIPES() {
        return new PipesNode();
    }

    /**
     * Create an instance of {@link DeleteCmd }
     * 
     */
    public DeleteCmd createDELETE() {
        return new DeleteCmd();
    }

    /**
     * Create an instance of {@link EmailNode }
     * 
     */
    public EmailNode createEMAIL() {
        return new EmailNode();
    }

    /**
     * Create an instance of {@link JoinNode }
     * 
     */
    public JoinNode createJOIN() {
        return new JoinNode();
    }

    /**
     * Create an instance of {@link Action }
     * 
     */
    public Action createACTION() {
        return new Action();
    }

    /**
     * Create an instance of {@link StateFlag }
     * 
     */
    public StateFlag createFLAG() {
        return new StateFlag();
    }

    /**
     * Create an instance of {@link ForkTransition }
     * 
     */
    public ForkTransition createFORKTRANSITION() {
        return new ForkTransition();
    }

    /**
     * Create an instance of {@link ActionTransition }
     * 
     */
    public ActionTransition createACTIONTRANSITION() {
        return new ActionTransition();
    }

    /**
     * Create an instance of {@link MkdirCmd }
     * 
     */
    public MkdirCmd createMKDIR() {
        return new MkdirCmd();
    }

    /**
     * Create an instance of {@link MoveCmd }
     * 
     */
    public MoveCmd createMOVE() {
        return new MoveCmd();
    }

    /**
     * Create an instance of {@link ForkNode }
     * 
     */
    public ForkNode createFORK() {
        return new ForkNode();
    }

    /**
     * Create an instance of {@link StartNode }
     * 
     */
    public StartNode createSTART() {
        return new StartNode();
    }

    /**
     * Create an instance of {@link DecisionNode }
     * 
     */
    public DecisionNode createDECISION() {
        return new DecisionNode();
    }

    /**
     * Create an instance of {@link ChmodCmd }
     * 
     */
    public ChmodCmd createCHMOD() {
        return new ChmodCmd();
    }

    /**
     * Create an instance of {@link EndNode }
     * 
     */
    public EndNode createEND() {
        return new EndNode();
    }

    /**
     * Create an instance of {@link ConfigurationNode.Property }
     * 
     */
    public ConfigurationNode.Property createCONFIGURATIONProperty() {
        return new ConfigurationNode.Property();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Workflow }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:oozie:workflow:0.1", name = "workflow-app")
    public JAXBElement<Workflow> createWorkflowApp(Workflow value) {
        return new JAXBElement<Workflow>(_WorkflowApp_QNAME, Workflow.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MapReduceNode }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:oozie:workflow:0.1", name = "map-reduce")
    public JAXBElement<MapReduceNode> createMapReduce(MapReduceNode value) {
        return new JAXBElement<MapReduceNode>(_MapReduce_QNAME, MapReduceNode.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SSHNode }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:oozie:workflow:0.1", name = "ssh")
    public JAXBElement<SSHNode> createSsh(SSHNode value) {
        return new JAXBElement<SSHNode>(_Ssh_QNAME, SSHNode.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PigNode }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:oozie:workflow:0.1", name = "pig")
    public JAXBElement<PigNode> createPig(PigNode value) {
        return new JAXBElement<PigNode>(_Pig_QNAME, PigNode.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SubWorkflow }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:oozie:workflow:0.1", name = "sub-workflow")
    public JAXBElement<SubWorkflow> createSubWorkflow(SubWorkflow value) {
        return new JAXBElement<SubWorkflow>(_SubWorkflow_QNAME, SubWorkflow.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FSNode }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:oozie:workflow:0.1", name = "fs")
    public JAXBElement<FSNode> createFs(FSNode value) {
        return new JAXBElement<FSNode>(_Fs_QNAME, FSNode.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link KillNode }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:oozie:workflow:0.1", name = "kill")
    public JAXBElement<KillNode> createKill(KillNode value) {
        return new JAXBElement<KillNode>(_Kill_QNAME, KillNode.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SwitchNode }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:oozie:workflow:0.1", name = "switch")
    public JAXBElement<SwitchNode> createSwitch(SwitchNode value) {
        return new JAXBElement<SwitchNode>(_Switch_QNAME, SwitchNode.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link JavaNode }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:oozie:workflow:0.1", name = "java")
    public JAXBElement<JavaNode> createJava(JavaNode value) {
        return new JAXBElement<JavaNode>(_Java_QNAME, JavaNode.class, null, value);
    }

}
